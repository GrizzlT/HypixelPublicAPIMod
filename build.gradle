
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
/*plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
}*/
apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.forge'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0"
group= "com.github.ThomasVDP.hypixelpublicapi" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "hypixel-public-api-library"

sourceCompatibility = targetCompatibility = 8

//project.tasks.build.dependsOn project.tasks.shadowJar

minecraft {
    version = "1.8.9-11.15.1.1855"
    runDir = "run"
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}


dependencies {
    shade 'com.github.HypixelDev.PublicAPI:Java:master-SNAPSHOT'

    shade 'net.tascalate:net.tascalate.concurrent:0.9.0'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

reobf {
    jar {
        extraLines "PK: net/tascalate/concurrent com/github/ThomasVDP/shadowedLibs/net/tascalate/concurrent"
        extraLines "PK: com/google/gson com/github/ThomasVDP/shadowedLibs/com/google/gson"
        extraLines "PK: net/hypixel/api com/github/ThomasVDP/shadowedLibs/net/hypixel/api"
        extraLines "PK: org/apache/http com/github/ThomasVDP/shadowedLibs/org/apache/http"
        extraLines "PK: org/apache/commons com/github/ThomasVDP/shadowedLibs/org/apache/commons"
    }
}

/*deobf {
    jar {
        extraLines "PK: net/tascalate/concurrent com/github/ThomasVDP/shadowedLibs/net/tascalate/concurrent"
    }
}*/

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}