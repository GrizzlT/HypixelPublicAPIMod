
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
plugins {
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0"
group= "com.github.grizzlt.hypixelpublicapi" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "hypixel-public-api-library"

sourceCompatibility = targetCompatibility = 8

minecraft {
    version = "1.8.9-11.15.1.1855"
    runDir = "run"
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencyManagement {
    imports {
        mavenBom "io.projectreactor:reactor-bom:2020.0.2"
    }
}

dependencies {
    //shade 'net.hypixel:HypixelAPI:3.0.0'
    shade 'com.github.GrizzlT:PublicAPI:master-SNAPSHOT'

    shade 'io.projectreactor:reactor-core'
}

allprojects {
    repositories {
        maven { url = 'https://jitpack.io' }
        //maven { url 'https://repo.hypixel.net/repository/Hypixel/' }
    }
}

reobf {
    jar {
        extraLines "PK: reactor com/github/grizzlt/shadowedLibs/reactor"
        extraLines "PK: net/hypixel/api com/github/grizzlt/shadowedLibs/net/hypixel/api"
        extraLines "PK: org/apache/http com/github/grizzlt/shadowedLibs/org/apache/http"
    }
}

jar {
    exclude 'com/google/gson', 'com/google/gson/**'
    exclude 'org/apache/commons', 'org/apache/commons/**'

    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // more goes in here

            pom.withXml {
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                            (it.artifactId.text() == 'PublicAPI') ||
                            (it.artifactId.text() == 'reactor-core')
                }.each() {
                    it.parent().remove(it)
                }
                pomNode.dependencyManagement.dependencies.'*'.findAll() {
                    (it.artifactId.text() == 'reactor-bom')
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}